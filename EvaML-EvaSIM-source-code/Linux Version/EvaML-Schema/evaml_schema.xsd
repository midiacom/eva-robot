<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<!--
XML Schema for the EvaML Language
This is EvaML
Copyright : 2022 LABORATORIO MIDIACOM, All Rights Reserved.
See https://www.midiacom.uff.br
PublicURI : https://github.com/midiacom/eva-robot/blob/master/EvaML-EvaSIM-source-code/Linux%20Version/EvaML-Schema/evaml_schema.xsd
Author : Marcelo Marques da Rocha
Revision: 2022/08/12
-->
  <!-- ** Data type definitions ** -->
	<xs:simpleType name="idType">
		<xs:restriction base="xs:ID"/>
	</xs:simpleType>

	<xs:simpleType name="modeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="ON"/>
			<xs:enumeration value="OFF"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="voiceListType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="pt-BR_IsabelaV3Voice"/>
			<xs:enumeration value="en-US_AllisonV3Voice"/>
			<xs:enumeration value="en-US_EmilyV3Voice"/>
			<xs:enumeration value="en-US_HenryV3Voice"/>
			<xs:enumeration value="es-LA_SofiaV3Voice"/>
			<xs:enumeration value="es-ES_LauraV3Voice"/>
			<xs:enumeration value="es-ES_EnriqueV3Voice"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="motionListType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="YES"/>
			<xs:enumeration value="NO"/>
			<xs:enumeration value="CENTER"/>
			<xs:enumeration value="LEFT"/>
			<xs:enumeration value="RIGHT"/>
			<xs:enumeration value="UP"/>
			<xs:enumeration value="DOWN"/>
			<xs:enumeration value="ANGRY"/>
			<xs:enumeration value="2UP"/>
			<xs:enumeration value="2DOWN"/>
			<xs:enumeration value="2RIGHT"/>
			<xs:enumeration value="2LEFT"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="voiceStringType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>

	<xs:simpleType name="voiceType">
		<xs:union memberTypes="voiceListType voiceStringType" />
	</xs:simpleType>

	<xs:simpleType name="audioListType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="applause-moderate"/>
			<xs:enumeration value="beep-09"/>
			<xs:enumeration value="cheering"/>
			<xs:enumeration value="fanfare2"/>
			<xs:enumeration value="laugh-01"/>
			<xs:enumeration value="mario-end-01"/>
			<xs:enumeration value="mario-end-02"/>
			<xs:enumeration value="mario-end-03"/>
			<xs:enumeration value="mario-fundo"/>
			<xs:enumeration value="mario-game-intro"/>
			<xs:enumeration value="mario-sound1"/>
			<xs:enumeration value="mario-sound2"/>
			<xs:enumeration value="mario-start-01"/>
			<xs:enumeration value="mario-start-02"/>
			<xs:enumeration value="oh-no"/>
			<xs:enumeration value="song-exodus"/>
			<xs:enumeration value="song-the-girl-from-ipanema"/>
			<xs:enumeration value="song-the-imperial-march"/>
			<xs:enumeration value="song-vivaldi-spring"/>
			<xs:enumeration value="song-exodus"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="audioStringType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>

	<xs:simpleType name="audioFileType">
		<xs:union memberTypes="audioListType audioStringType" />
	</xs:simpleType>

	<xs:simpleType name="caseOpType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="exact"/>
			<xs:enumeration value="contain"/>
			<xs:enumeration value="eq"/>
			<xs:enumeration value="lt"/>
			<xs:enumeration value="gt"/>
			<xs:enumeration value="lte"/>
			<xs:enumeration value="gte"/>
			<xs:enumeration value="ne"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="audioBlockType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="TRUE"/>
			<xs:enumeration value="FALSE"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ledAnimationType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="HAPPY"/>
			<xs:enumeration value="SAD"/>
			<xs:enumeration value="ANGRY"/>
			<xs:enumeration value="STOP"/>
			<xs:enumeration value="SPEAK"/>
			<xs:enumeration value="LISTEN"/>
			<xs:enumeration value="SURPRISE"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="lightStateType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="ON"/>
			<xs:enumeration value="OFF"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="lightRgbColorType">
		<xs:restriction base="xs:token">
			<xs:pattern value="#[\dA-F | a-f ]{6}([\dA-F | a-f][\dA-F | a-f])?"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="lightListColorType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="WHITE"/>
			<xs:enumeration value="BLACK"/>
			<xs:enumeration value="RED"/>
			<xs:enumeration value="PINK"/>
			<xs:enumeration value="GREEN"/>
			<xs:enumeration value="YELLOW"/>
			<xs:enumeration value="BLUE"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="lightColorType">
		<xs:union memberTypes="lightListColorType lightRgbColorType" />
	</xs:simpleType>

	<xs:simpleType name="counterOpType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="="/>
			<xs:enumeration value="+"/>
			<xs:enumeration value="*"/>
			<xs:enumeration value="/"/>
			<xs:enumeration value="%"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="evaEmotionType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="NEUTRAL"/>
			<xs:enumeration value="HAPPY"/>
			<xs:enumeration value="SAD"/>
			<xs:enumeration value="ANGRY"/>
		</xs:restriction>
	</xs:simpleType>

  <!-- ** EvaML Commands Definitions ** -->

	<xs:element name="random">
		<xs:complexType>
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="min" type="xs:nonNegativeInteger" use="required"/>
			<xs:attribute name="max" type="xs:nonNegativeInteger" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="wait">
	  <xs:complexType>
		<xs:attribute name="id" type="idType"/>
	    <xs:attribute name="duration" type="xs:nonNegativeInteger" use="required"/>
	  </xs:complexType>
	</xs:element>

	<xs:element name="talk">
		<xs:complexType mixed="true">
			<xs:attribute name="id" type="idType"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="stop">
		<xs:complexType>
		</xs:complexType>
	</xs:element>

	<xs:element name="light">
		<xs:complexType>
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="state" type="lightStateType" use="required"/>
			<xs:attribute name="color" type="lightColorType" default="WHITE"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="goto">
		<xs:complexType>
			<xs:attribute name="target" type="xs:IDREF" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="userEmotion">
		<xs:complexType>
			<xs:attribute name="id" type="idType"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="evaEmotion">
		<xs:complexType>
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="emotion" type="evaEmotionType" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="useMacro">
		<xs:complexType>
			<xs:attribute name="macro" type="xs:IDREF" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="listen">
		<xs:complexType>
			<xs:attribute name="id" type="idType"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="audio">
		<xs:complexType>
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="source" type="audioFileType" use="required"/>
			<xs:attribute name="block" type="audioBlockType" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="led">
		<xs:complexType>
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="animation" type="ledAnimationType" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="counter">
		<xs:complexType>
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="var" type="xs:string" use="required"/>
			<xs:attribute name="op" type="counterOpType" use="required"/>
			<xs:attribute name="value" type="xs:integer" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="switch">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="case" minOccurs="1" maxOccurs="unbounded" />
				<xs:element ref="default" minOccurs="0" maxOccurs="1"/>
			</xs:sequence>
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="var" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="motion">
		<xs:complexType>
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="type" type="motionListType" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="voice">
		<xs:complexType>
			<xs:attribute name="tone" type="voiceType" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="lightEffects">
		<xs:complexType>
			<xs:attribute name="mode" type="modeType" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="audioEffects">
		<xs:complexType>
			<xs:attribute name="mode" type="modeType" use="required"/>
			<xs:attribute name="vol" type="xs:string" default="100%"/>
		</xs:complexType>
	</xs:element>
    
	<xs:element name="loop">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="loop"/>
				<xs:element ref="random"/>
				<xs:element ref="wait"/>
				<xs:element ref="talk"/>
				<xs:element ref="stop"/>
				<xs:element ref="light"/>
				<xs:element ref="goto"/>
				<xs:element ref="motion"/>
				<xs:element ref="userEmotion"/>
				<xs:element ref="evaEmotion"/>
				<xs:element ref="useMacro"/>
				<xs:element ref="listen"/>
				<xs:element ref="audio"/>
				<xs:element ref="led"/>
				<xs:element ref="counter"/>
				<xs:element ref="switch"/>
			</xs:choice>
			<xs:attribute name="id" type="idType"/>
		    <xs:attribute name="var" type="xs:string" use="optional"/>
		    <xs:attribute name="times" type="xs:positiveInteger" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="case">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="loop"/>
				<xs:element ref="random"/>
				<xs:element ref="wait"/>
				<xs:element ref="talk"/>
				<xs:element ref="stop"/>
				<xs:element ref="light"/>
				<xs:element ref="goto"/>
				<xs:element ref="motion"/>
				<xs:element ref="userEmotion"/>
				<xs:element ref="evaEmotion"/>
				<xs:element ref="useMacro"/>
				<xs:element ref="listen"/>
				<xs:element ref="audio"/>
				<xs:element ref="led"/>
				<xs:element ref="counter"/>
				<xs:element ref="switch"/>
			</xs:choice>
			<xs:attribute name="op" type="caseOpType" use="required"/>
			<xs:attribute name="value" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="default">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="loop"/>
				<xs:element ref="random"/>
				<xs:element ref="wait"/>
				<xs:element ref="talk"/>
				<xs:element ref="stop"/>
				<xs:element ref="light"/>
				<xs:element ref="goto"/>
				<xs:element ref="motion"/>
				<xs:element ref="userEmotion"/>
				<xs:element ref="evaEmotion"/>
				<xs:element ref="useMacro"/>
				<xs:element ref="listen"/>
				<xs:element ref="audio"/>
				<xs:element ref="led"/>
				<xs:element ref="counter"/>
				<xs:element ref="switch"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="macro">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="loop"/>
				<xs:element ref="random"/>
				<xs:element ref="wait"/>
				<xs:element ref="talk"/>
				<xs:element ref="stop"/>
				<xs:element ref="light"/>
				<xs:element ref="goto"/>
				<xs:element ref="motion"/>
				<xs:element ref="userEmotion"/>
				<xs:element ref="evaEmotion"/>
				<xs:element ref="listen"/>
				<xs:element ref="audio"/>
				<xs:element ref="led"/>
				<xs:element ref="counter"/>
				<xs:element ref="switch"/>
			</xs:choice>
			<xs:attribute name="id" type="idType" use="required" />
		</xs:complexType>
	</xs:element>

	<!-- ** Root Section Definition ** -->
	<xs:element name="evaml">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="settings"/>
				<xs:element ref="script"/>
				<xs:element ref="macros" minOccurs="0" maxOccurs="1"/>
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>

	<!-- ** Settings Section Definition ** -->
	<xs:element name="settings">
    <xs:complexType>
			<xs:all>
				<xs:element ref="voice" minOccurs="1" maxOccurs="1"/>
				<xs:element ref="lightEffects" minOccurs="0" maxOccurs="1"/>
				<xs:element ref="audioEffects" minOccurs="0" maxOccurs="1"/>
			</xs:all>
    </xs:complexType>
  </xs:element>

	<!-- ** Script Section Definition ** -->
	<xs:element name="script">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="loop"/>
				<xs:element ref="random"/>
				<xs:element ref="wait"/>
				<xs:element ref="talk"/>
				<xs:element ref="stop"/>
				<xs:element ref="light"/>
				<xs:element ref="goto"/>
				<xs:element ref="motion"/>
				<xs:element ref="userEmotion"/>
				<xs:element ref="evaEmotion"/>
				<xs:element ref="useMacro"/>
				<xs:element ref="listen"/>
				<xs:element ref="audio"/>
				<xs:element ref="led"/>
				<xs:element ref="counter"/>
				<xs:element ref="switch"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<!-- ** Macros Section Definition ** -->
	<xs:element name="macros">
		<xs:complexType>
			<xs:sequence minOccurs="1" maxOccurs="unbounded">
				<xs:element ref="macro"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>
